name: "Node-to-docker"
on:
  workflow_dispatch:
    inputs:
      isLatest:
        description: 'Add latest tag'
        default: 'true'
        require: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  node-build-push-docker:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from repo
        uses: actions/checkout@master
      # - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 100
      #     token: ${{ secrets.REPO_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      ## node
      - name: Get updated node version
        id: get-node-version
        run: |
          sh .github/workflows/scripts/nodeVersion.sh

      - name: Build and push
        # if: github.event.inputs.isLatest == 'false'
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: arm64,amd64
          file: ./packages/node/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: RELEASE_VERSION=${{ steps.get-node-version.outputs.NODE_VERSION }}

      # - name: Build and push
      #   if: github.event.inputs.isLatest == 'false'
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     platforms: arm64,amd64
      #     file: ./packages/node/Dockerfile
      #     tags: onfinality/subql-node:v${{ steps.get-node-version.outputs.NODE_VERSION }}
      #     build-args: RELEASE_VERSION=${{ steps.get-node-version.outputs.NODE_VERSION }}

      # - name: Build and push
      #   if: github.event.inputs.isLatest == 'true'
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     platforms: arm64,amd64
      #     file: ./packages/node/Dockerfile
      #     tags: onfinality/subql-node:v${{ steps.get-node-version.outputs.NODE_VERSION }},onfinality/subql-node:latest
      #     build-args: RELEASE_VERSION=${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

